use strum_macros::EnumIter;
use strum::IntoEnumIterator;

use crate::chunks::chunk_data::BlockIndexType;

pub static CUSTOM_BLOCK_ID_START: BlockIndexType = 1000;

#[derive(EnumIter)]
pub enum BlockID {
    Grass,
    Stone,
    SmoothStone,
    StoneBricks,
    CrackedStoneBricks,
    MossyStoneBricks,
    Gravel,
    CoarseDirt,
    Bedrock,
    Sand,
    AmethystBlock,
    OakPlanks,
    IronBlock,
    Sandstone,
    ChiseledSandstone,
    Podzol,
    Blackstone,
    PolishedBlackstone,
    Andesite,
    Deepslate,
    DeepslateBricks,
    CrackedDeepslateBricks,
    PolishedDeepslate,
    Diorite,
    PolishedDiorite,
    Granite,
    PolishedGranite,
    Cobblestone,
    MossyCobblestone,
    AcaciaLog,
    AcaciaLeaves,
    AcaciaPlanks,
    BirchLog,
    BirchLeaves,
    BirchPlanks,
    DarkOak,
    DarkOakLeaves,
    DarkOakPlanks,
    JungleLog,
    JungleLeaves,
    JunglePlanks,
    OakLog,
    OakLeaves,
    SpruceLog,
    SpruceLeaves,
    SprucePlanks,
    BushSmall,
    FlowerLupin,
    FlowerLupin2,
    FlowerOrchid,
    FlowerRose,
    FlowerWhite,
    FlowerWhite2,
    FlowerYellow,
    FlowerYellow2,
    FlowerYellow3,
    Grass1,
    Grass2,
    Grass3,
    Grass4,
    GroundMoss1,
    GroundMoss2,
    GroundMoss3,
    TallGrass1,
    TallGrass2,
}

impl BlockID {
    pub fn id(&self) -> BlockIndexType {
        match *self {
            BlockID::Grass => 1,
            BlockID::Stone => 2,
            BlockID::SmoothStone => 3,
            BlockID::StoneBricks => 4,
            BlockID::CrackedStoneBricks => 5,
            BlockID::MossyStoneBricks => 6,
            BlockID::Gravel => 7,
            BlockID::CoarseDirt => 8,
            BlockID::Bedrock => 9,
            BlockID::Sand => 10,
            BlockID::AmethystBlock => 11,
            BlockID::OakPlanks => 12,
            BlockID::IronBlock => 13,
            BlockID::Sandstone => 14,
            BlockID::ChiseledSandstone => 15,
            BlockID::Podzol => 16,
            BlockID::Blackstone => 17,
            BlockID::PolishedBlackstone => 18,
            BlockID::Andesite => 19,
            BlockID::Deepslate => 20,
            BlockID::DeepslateBricks => 21,
            BlockID::CrackedDeepslateBricks => 22,
            BlockID::PolishedDeepslate => 23,
            BlockID::Diorite => 24,
            BlockID::PolishedDiorite => 25,
            BlockID::Granite => 26,
            BlockID::PolishedGranite => 27,
            BlockID::Cobblestone => 28,
            BlockID::MossyCobblestone => 29,
            BlockID::AcaciaLog => 30,
            BlockID::AcaciaLeaves => 31,
            BlockID::AcaciaPlanks => 32,
            BlockID::BirchLog => 33,
            BlockID::BirchLeaves => 34,
            BlockID::BirchPlanks => 35,
            BlockID::DarkOak => 36,
            BlockID::DarkOakLeaves => 37,
            BlockID::DarkOakPlanks => 38,
            BlockID::JungleLog => 39,
            BlockID::JungleLeaves => 40,
            BlockID::JunglePlanks => 41,
            BlockID::OakLog => 42,
            BlockID::OakLeaves => 43,
            BlockID::SpruceLog => 44,
            BlockID::SpruceLeaves => 45,
            BlockID::SprucePlanks => 46,
            BlockID::BushSmall => 47,
            BlockID::FlowerLupin => 48,
            BlockID::FlowerLupin2 => 49,
            BlockID::FlowerOrchid => 50,
            BlockID::FlowerRose => 51,
            BlockID::FlowerWhite => 52,
            BlockID::FlowerWhite2 => 53,
            BlockID::FlowerYellow => 54,
            BlockID::FlowerYellow2 => 55,
            BlockID::FlowerYellow3 => 56,
            BlockID::Grass1 => 57,
            BlockID::Grass2 => 58,
            BlockID::Grass3 => 59,
            BlockID::Grass4 => 60,
            BlockID::GroundMoss1 => 61,
            BlockID::GroundMoss2 => 62,
            BlockID::GroundMoss3 => 63,
            BlockID::TallGrass1 => 64,
            BlockID::TallGrass2 => 65,
        }
    }

    pub fn from_id(id: &BlockIndexType) -> Option<Self> {
        for block in Self::iter() {
            if block.id() == *id {
                return Some(block);
            }
        }
        None
    }

    pub fn from_string(slug: &str) -> Option<Self> {
        let id = match slug {
            "grass" => BlockID::Grass,
            "stone" => BlockID::Stone,
            "smooth_stone" => BlockID::SmoothStone,
            "stone_bricks" => BlockID::StoneBricks,
            "cracked_stone_bricks" => BlockID::CrackedStoneBricks,
            "mossy_stone_bricks" => BlockID::MossyStoneBricks,
            "gravel" => BlockID::Gravel,
            "coarse_dirt" => BlockID::CoarseDirt,
            "bedrock" => BlockID::Bedrock,
            "sand" => BlockID::Sand,
            "amethyst_block" => BlockID::AmethystBlock,
            "oak_planks" => BlockID::OakPlanks,
            "iron_block" => BlockID::IronBlock,
            "sandstone" => BlockID::Sandstone,
            "chiseled_sandstone" => BlockID::ChiseledSandstone,
            "podzol" => BlockID::Podzol,
            "blackstone" => BlockID::Blackstone,
            "polished_blackstone" => BlockID::PolishedBlackstone,
            "andesite" => BlockID::Andesite,
            "deepslate" => BlockID::Deepslate,
            "deepslate_bricks" => BlockID::DeepslateBricks,
            "cracked_deepslate_bricks" => BlockID::CrackedDeepslateBricks,
            "polished_deepslate" => BlockID::PolishedDeepslate,
            "diorite" => BlockID::Diorite,
            "polished_diorite" => BlockID::PolishedDiorite,
            "granite" => BlockID::Granite,
            "polished_granite" => BlockID::PolishedGranite,
            "cobblestone" => BlockID::Cobblestone,
            "mossy_cobblestone" => BlockID::MossyCobblestone,
            "acacia_log" => BlockID::AcaciaLog,
            "acacia_leaves" => BlockID::AcaciaLeaves,
            "acacia_planks" => BlockID::AcaciaPlanks,
            "birch_log" => BlockID::BirchLog,
            "birch_leaves" => BlockID::BirchLeaves,
            "birch_planks" => BlockID::BirchPlanks,
            "dark_oak" => BlockID::DarkOak,
            "dark_oak_leaves" => BlockID::DarkOakLeaves,
            "dark_oak_planks" => BlockID::DarkOakPlanks,
            "jungle_log" => BlockID::JungleLog,
            "jungle_leaves" => BlockID::JungleLeaves,
            "jungle_planks" => BlockID::JunglePlanks,
            "oak_log" => BlockID::OakLog,
            "oak_leaves" => BlockID::OakLeaves,
            "spruce_log" => BlockID::SpruceLog,
            "spruce_leaves" => BlockID::SpruceLeaves,
            "spruce_planks" => BlockID::SprucePlanks,
            "bush_small" => BlockID::BushSmall,
            "flower_lupin" => BlockID::FlowerLupin,
            "flower_lupin2" => BlockID::FlowerLupin2,
            "flower_orchid" => BlockID::FlowerOrchid,
            "flower_rose" => BlockID::FlowerRose,
            "flower_white" => BlockID::FlowerWhite,
            "flower_white2" => BlockID::FlowerWhite2,
            "flower_yellow" => BlockID::FlowerYellow,
            "flower_yellow2" => BlockID::FlowerYellow2,
            "flower_yellow3" => BlockID::FlowerYellow3,
            "grass1" => BlockID::Grass1,
            "grass2" => BlockID::Grass2,
            "grass3" => BlockID::Grass3,
            "grass4" => BlockID::Grass4,
            "ground_moss1" => BlockID::GroundMoss1,
            "ground_moss2" => BlockID::GroundMoss2,
            "ground_moss3" => BlockID::GroundMoss3,
            "tall_grass1" => BlockID::TallGrass1,
            "tall_grass2" => BlockID::TallGrass2,
            _ => return None,
        };
        Some(id)
    }
}
